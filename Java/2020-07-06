# 마샬링과 언마샬링


- 객체 스트림이란?
  프로그램 메모리상에 존재하는 객체를 직접 입출력해 줄 수 있는 스트림으로 현재 상태를 보존하기 위한 영속성을 지원할 수 있다.
  자바에서 객체 안에 저장되어 있는 내용을 파일로 저장하거나 네트워크를 통해 다른 곳으로 전송하기 위해선 객체를 바이트 형태로 일일이 분해해야한다.
  이를 위해 객체를 직접 입출력 할 수 있도록 해주는 객체 스트림이다.
- 스트림 이란?
 실제의 입력이나 출력이 표현된 데이터의 이상화된 흐름을 의미한다. 스트림은 운영체제에 의해 생성되는 가상의 연결고리를 의미한다.
 
- 객체 전송의 단계
  객체를 분해하여 전송하기 위해서는 직렬화 되어야한다.
3 단계
1. 직렬화된 객체를 바이트 단위로 분해한다. (마샬링)
2. 직렬화 되어 분해된 데이터를 순서에 따라 전송한다.
3. 전송 받은 데이터를 원래대로 복구한다. (언마샬링)

- 마샬링이란?
  마샬링은 데이터를 바이트의 덩어리로 만들어 스트림에 보낼 수 있는 형태로 바꾸는 변환 작업을 뜻한다.
  자바에서 마샬링을 적용할 수 있는 데이터는 원시 자료형 객체 중에서 Serializable 인터페이스를 구현한 클래스로 만들어진 객체이다.

- 직렬화란?
  * 직렬화가 가능한 객체의 조건
  1. 기본형 타입은 직렬화가 가능
  2. Serializable 인터페이스를 구현한 객체여야 한다. (Vector 클래스는 Serializable 인터페이스 구현)
  3. 해당 객체의 멤버들 중에 Serializable 인터페이스가 구현되지 않은게 존재하면 안된다.
  4. transient 가 사용된 멤버는 전송되지 않는다.( 보안 변수 : null 전송)
  
  * transient 란?
  - Serialize하는 과정에 제외하고 싶은 경우 선언하는 키워드이다.
  - 패스워드와 같은 보안정보를 직렬화 과정에서 제외하고 싶은 경우에 주로 적용합니다.
  
  * Vector 클래스란?
  - ArrayList클래스와 같이 컬렉션 프레임웍에서 가장 많이 사용되는 컬렉션클래스 입니다.

- 언마샬링이란?
  언마샬링은 객체 스트림을 통해서 전달된 바이트 덩어리를 원래의 객체로 복구하는 작업이다.
 
